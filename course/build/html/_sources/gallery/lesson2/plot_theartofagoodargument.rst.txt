
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/lesson2/plot_theartofagoodargument.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_lesson2_plot_theartofagoodargument.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_lesson2_plot_theartofagoodargument.py:


The art of a good argument
==========================

Here we...


The way we determine whether Charlie will start shouting is using 
the following table.

.. GENERATED FROM PYTHON SOURCE LINES 13-27

.. code-block:: default


    import numpy as np
    import pandas as pd

    Charlie_shout =np.array([[0.1, 0.5],[0.7,0.95]])
    Charlie_rules = pd.DataFrame(data= Charlie_shout,index=['Aisha calm', 'Aisha shouting'], columns=['Charlie calm', 'Charlie shoting'])
    print('Probability of Charlie shouting:')
    print(Charlie_rules)

    Aisha_shout =np.array([[0.1, 0.7],[0.5,0.95]])
    Aisha_rules = pd.DataFrame(data= Aisha_shout,index=['Aisha calm', 'Aisha shouting'], columns=['Charlie calm', 'Charlie shoting'])
    print('Probability of Aisha shouting:')
    print(Aisha_rules)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Probability of Charlie shouting:
                    Charlie calm  Charlie shoting
    Aisha calm               0.1             0.50
    Aisha shouting           0.7             0.95
    Probability of Aisha shouting:
                    Charlie calm  Charlie shoting
    Aisha calm               0.1             0.70
    Aisha shouting           0.5             0.95




.. GENERATED FROM PYTHON SOURCE LINES 28-29

Initially, neither of them are shouting

.. GENERATED FROM PYTHON SOURCE LINES 30-40

.. code-block:: default


    #Number of time steps
    T = 25

    Charlie=[0]
    Aisha=[0]











.. GENERATED FROM PYTHON SOURCE LINES 41-43

Now we loop over 25 steps of discussion according to the rules above. 


.. GENERATED FROM PYTHON SOURCE LINES 44-72

.. code-block:: default



    def argument(T,Charlie_rules,Aisha_rules,print_out=1):
        for i in range(T):

            Prob_Charlie = Charlie_rules.iloc[Charlie[i]][Aisha[i]]
            if np.random.rand()<Prob_Charlie:
                describe_Charlie = 'Charlie shouts. '
                Charlie.append(1)
            else:
                describe_Charlie = "Charlie doesn't shout. "
                Charlie.append(0)
                    
            Prob_Aisha = Aisha_rules.iloc[Charlie[i]][Aisha[i]]
            if np.random.rand()<Prob_Aisha:
                describe_Aisha = 'Aisha shouts.'
                Aisha.append(1)
            else:
                describe_Aisha = "Aisha doesn't shout."
                Aisha.append(0)
            
            if print_out:
                print('Time step %d:' % (i+1) + describe_Charlie +describe_Aisha)
    
        return Aisha,Charlie

    Aisha,Charlie = argument(T,Charlie_rules,Aisha_rules)
        




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Time step 1:Charlie doesn't shout. Aisha doesn't shout.
    Time step 2:Charlie doesn't shout. Aisha doesn't shout.
    Time step 3:Charlie doesn't shout. Aisha shouts.
    Time step 4:Charlie doesn't shout. Aisha shouts.
    Time step 5:Charlie doesn't shout. Aisha shouts.
    Time step 6:Charlie doesn't shout. Aisha shouts.
    Time step 7:Charlie shouts. Aisha doesn't shout.
    Time step 8:Charlie doesn't shout. Aisha shouts.
    Time step 9:Charlie shouts. Aisha shouts.
    Time step 10:Charlie doesn't shout. Aisha shouts.
    Time step 11:Charlie doesn't shout. Aisha doesn't shout.
    Time step 12:Charlie doesn't shout. Aisha doesn't shout.
    Time step 13:Charlie doesn't shout. Aisha doesn't shout.
    Time step 14:Charlie doesn't shout. Aisha doesn't shout.
    Time step 15:Charlie doesn't shout. Aisha doesn't shout.
    Time step 16:Charlie doesn't shout. Aisha doesn't shout.
    Time step 17:Charlie doesn't shout. Aisha doesn't shout.
    Time step 18:Charlie shouts. Aisha doesn't shout.
    Time step 19:Charlie shouts. Aisha doesn't shout.
    Time step 20:Charlie shouts. Aisha shouts.
    Time step 21:Charlie shouts. Aisha shouts.
    Time step 22:Charlie shouts. Aisha shouts.
    Time step 23:Charlie shouts. Aisha shouts.
    Time step 24:Charlie shouts. Aisha shouts.
    Time step 25:Charlie shouts. Aisha shouts.




.. GENERATED FROM PYTHON SOURCE LINES 73-75

We can also represent the steps in the environment as a binary string.


.. GENERATED FROM PYTHON SOURCE LINES 76-82

.. code-block:: default

    print("Charlie's shouting as a string of zeros (clam) and ones (shouting):")
    print(' '.join(map(str, Charlie)))
    print("Aisha's shouting as a string of zeros (clam) and ones (shouting):")
    print(' '.join(map(str, Aisha)))






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Charlie's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1
    Aisha's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1




.. GENERATED FROM PYTHON SOURCE LINES 83-85

WNow we can make them argue lots of times!


.. GENERATED FROM PYTHON SOURCE LINES 86-102

.. code-block:: default


    for j in range(5):
    
        Charlie=[0]
        Aisha=[0]
        print('Argument %d' % (j+1))
        print('----------')
        Aisha,Charlie = argument(T,Charlie_rules,Aisha_rules,0)
        print("Charlie's shouting as a string of zeros (clam) and ones (shouting):")
        print(' '.join(map(str, Charlie)))
        print("Aisha's shouting as a string of zeros (clam) and ones (shouting):")
        print(' '.join(map(str, Aisha)))
        print('\n')







.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Argument 1
    ----------
    Charlie's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1
    Aisha's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1


    Argument 2
    ----------
    Charlie's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    Aisha's shouting as a string of zeros (clam) and ones (shouting):
    0 0 1 0 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1


    Argument 3
    ----------
    Charlie's shouting as a string of zeros (clam) and ones (shouting):
    0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1
    Aisha's shouting as a string of zeros (clam) and ones (shouting):
    0 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1


    Argument 4
    ----------
    Charlie's shouting as a string of zeros (clam) and ones (shouting):
    0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1
    Aisha's shouting as a string of zeros (clam) and ones (shouting):
    0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 0 0 1 1


    Argument 5
    ----------
    Charlie's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1
    Aisha's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1






.. GENERATED FROM PYTHON SOURCE LINES 103-105

Let's update Charlie's rules.


.. GENERATED FROM PYTHON SOURCE LINES 106-113

.. code-block:: default


    Charlie_shout =np.array([[0.1, 0.1],[0.1,0.95]])
    Charlie_rules = pd.DataFrame(data= Charlie_shout,index=['Aisha calm', 'Aisha shouting'], columns=['Charlie calm', 'Charlie shoting'])
    print('Probability of Charlie shouting:')
    print(Charlie_rules)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Probability of Charlie shouting:
                    Charlie calm  Charlie shoting
    Aisha calm               0.1             0.10
    Aisha shouting           0.1             0.95




.. GENERATED FROM PYTHON SOURCE LINES 114-116

Now let's look at five arguments


.. GENERATED FROM PYTHON SOURCE LINES 117-134

.. code-block:: default



    for j in range(5):
    
        Charlie=[0]
        Aisha=[0]
        print('Argument %d' % (j+1))
        print('----------')
        Aisha,Charlie = argument(T,Charlie_rules,Aisha_rules,0)
        print("Charlie's shouting as a string of zeros (clam) and ones (shouting):")
        print(' '.join(map(str, Charlie)))
        print("Aisha's shouting as a string of zeros (clam) and ones (shouting):")
        print(' '.join(map(str, Aisha)))
        print('\n')







.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Argument 1
    ----------
    Charlie's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0
    Aisha's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 1 1 0 0 0 0


    Argument 2
    ----------
    Charlie's shouting as a string of zeros (clam) and ones (shouting):
    0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0
    Aisha's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0


    Argument 3
    ----------
    Charlie's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0
    Aisha's shouting as a string of zeros (clam) and ones (shouting):
    0 1 1 1 1 0 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1


    Argument 4
    ----------
    Charlie's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0
    Aisha's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0


    Argument 5
    ----------
    Charlie's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0
    Aisha's shouting as a string of zeros (clam) and ones (shouting):
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0







.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.026 seconds)


.. _sphx_glr_download_gallery_lesson2_plot_theartofagoodargument.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_theartofagoodargument.py <plot_theartofagoodargument.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_theartofagoodargument.ipynb <plot_theartofagoodargument.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
