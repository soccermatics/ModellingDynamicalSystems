
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/lesson5/plot_downloading.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_lesson5_plot_downloading.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_lesson5_plot_downloading.py:


.. _download:

World Bank Data
===============

In this notebook we will model world development, inspired by the
presentations of `Hans Rosling on 200 years that changed the
world <https://https://www.gapminder.org/videos/200-years-that-changed-the-world/>`_.

We will go through the steps of downloading data from an Application
Programming Interface (API), plotting it, fitting a linear regression
model (with non-linear terms) and then using a model to make future
predictions.

First we use the World Bank API in order to download the data.

.. GENERATED FROM PYTHON SOURCE LINES 19-39

.. code-block:: default


    #Import libraries
    #Plotting 
    import matplotlib as mpl
    import matplotlib.pyplot as plt
    #Dataframes (panda) and math opperations (numpy)
    import pandas as pd
    import numpy as np
    #World bank data interface
    import world_bank_data as wb
    #Import machine learning tools (for linear regression)
    import sklearn.linear_model as skl_lm
    import itertools
    import math
    
    # Default plotting options.
    mpl.rcParams['axes.spines.right'] = False
    mpl.rcParams['axes.spines.top'] = False









.. GENERATED FROM PYTHON SOURCE LINES 40-43

Now we download the data set, indexed with the country code.

The data is downloaded from here `here <https://databank.worldbank.org/home>`_.

.. GENERATED FROM PYTHON SOURCE LINES 43-49

.. code-block:: default


    gdp_percapita = wb.get_series('NY.GNP.PCAP.CD', id_or_value='id', simplify_index=True)
    gdp_percapita
    childmortality = wb.get_series('SH.DYN.MORT', id_or_value='id', simplify_index=True)
    childmortality





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Country  Year
    AFE      1960     NaN
             1961     NaN
             1962     NaN
             1963     NaN
             1964     NaN
                     ... 
    ZWE      2018    53.7
             2019    52.7
             2020    51.8
             2021    49.5
             2022     NaN
    Name: SH.DYN.MORT, Length: 16758, dtype: float64



.. GENERATED FROM PYTHON SOURCE LINES 50-57

Now we reorganise the data so it is in a dataframe (like an Excel
spreadsheet) with columns Year, Country, Child Mortality (per 10,000
births) (:math:`C(k)`), log Gross Domestic Product per person
(:math:`G(k)`) and change in these two variables — :math:`C(k+1)-C(k)`
and :math:`G(k+1)-G(k)` — over time :math:`k`.

(This can take one minute or so to run)

.. GENERATED FROM PYTHON SOURCE LINES 57-92

.. code-block:: default


    cm=childmortality.to_frame()
    gdp=gdp_percapita.to_frame()

    df = pd.DataFrame(columns=('Year', 'Country','Child Mortality','GDP','Diff CM','Diff GDP'))
    countries = cm.index
    this_country=''
    this_cm=0
    this_gdp=0
    j=0

    for i,c in enumerate(countries):
    

        prev_cm=this_cm
        prev_gdp=this_gdp
        prev_country=this_country
        
        #Update for this year.
        this_year=c[1]
        this_cm=cm.iloc[i]['SH.DYN.MORT']
        this_gdp=np.log(gdp.iloc[i]['NY.GNP.PCAP.CD'])
        this_country=c[0]
    
        if (prev_country==this_country):
            #Update differences and put in matrix
            diff_cm=this_cm-prev_cm
            diff_gdp=this_gdp-prev_gdp
            if not(np.isnan(diff_cm) or np.isnan(diff_gdp)):
                df.loc[j] = [this_year,this_country,this_cm,this_gdp,diff_cm,diff_gdp]
                j=j+1

    df.head()
    #df.to_csv('../data/CM_GDP.csv') 






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Year</th>
          <th>Country</th>
          <th>Child Mortality</th>
          <th>GDP</th>
          <th>Diff CM</th>
          <th>Diff GDP</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>1991</td>
          <td>AFE</td>
          <td>164.161055</td>
          <td>6.620620</td>
          <td>-1.671507</td>
          <td>0.052054</td>
        </tr>
        <tr>
          <th>1</th>
          <td>1992</td>
          <td>AFE</td>
          <td>162.695217</td>
          <td>6.554938</td>
          <td>-1.465838</td>
          <td>-0.065682</td>
        </tr>
        <tr>
          <th>2</th>
          <td>1993</td>
          <td>AFE</td>
          <td>161.379202</td>
          <td>6.544833</td>
          <td>-1.316014</td>
          <td>-0.010106</td>
        </tr>
        <tr>
          <th>3</th>
          <td>1994</td>
          <td>AFE</td>
          <td>161.983963</td>
          <td>6.530047</td>
          <td>0.604761</td>
          <td>-0.014786</td>
        </tr>
        <tr>
          <th>4</th>
          <td>1995</td>
          <td>AFE</td>
          <td>156.580561</td>
          <td>6.579397</td>
          <td>-5.403402</td>
          <td>0.049351</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 93-94

By uncommenting the line above you save the data set to a directory called
data. 


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  16.906 seconds)


.. _sphx_glr_download_gallery_lesson5_plot_downloading.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_downloading.py <plot_downloading.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_downloading.ipynb <plot_downloading.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
