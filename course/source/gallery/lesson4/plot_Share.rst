
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/lesson4/plot_Share.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_lesson4_plot_Share.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_lesson4_plot_Share.py:


Share prices
============

We now use our function to calulate a covariance function for H&M share 
prices.

.. GENERATED FROM PYTHON SOURCE LINES 13-78


.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "/Users/davsu428/Documents/GitHub/ModellingDynamicalSystems/course/lessons/lesson4/plot_Share.py", line 59, in <module>
        R=R_empirical(w,maxtau=200)
    NameError: name 'R_empirical' is not defined






|

.. code-block:: default


    import random
    import numpy as np
    import matplotlib.pyplot as plt
    import matplotlib
    from pylab import rcParams
    matplotlib.font_manager.FontProperties(family='Helvetica',size=11)
    rcParams['figure.figsize'] = 14/2.54, 14/2.54
    import pandas as pd



    def R_theoretical(a_vals,maxtau,sigma=1):
        R = np.zeros(maxtau)
        for tau in range(maxtau):
            R[tau] = np.power(-a_vals[0],tau)* (np.power(sigma,2)/(1-np.power(a_vals[0],2)))

        return R




    def plotOverTime(ax, w):
        n=len(w)
        t=np.arange(n)
        ax.plot(t,w, '-',color='k')
        ax.set_xlabel('Time: t')
        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.set_xticks(np.arange(0,n,step=n/5))
        ax.set_yticks(np.arange(-n,n+1,step=10))
        ax.set_xlim(0,n)
        ax.set_ylim(-2*np.sqrt(n),2*np.sqrt(n)) 

    share_prices=pd.read_csv('../data/HandM.csv')
    w = share_prices['Average price']
    w=np.array(w.dropna())
    fig,ax=plt.subplots(1)


    w=w-np.mean(w)
    plotOverTime(ax, w)
    ax.set_ylim(-10,10) 
    plt.show()

    fig,ax=plt.subplots(1)
    R=R_empirical(w,maxtau=200)
    plotOverTime(ax, R)


    plt.show()
















.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.559 seconds)


.. _sphx_glr_download_gallery_lesson4_plot_Share.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_Share.py <plot_Share.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_Share.ipynb <plot_Share.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
